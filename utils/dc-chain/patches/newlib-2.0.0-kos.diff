diff -ruN newlib-2.0.0/newlib/configure.host newlib-2.0.0-kos/newlib/configure.host
--- newlib-2.0.0/newlib/configure.host	2012-12-04 16:43:20.000000000 -0500
+++ newlib-2.0.0-kos/newlib/configure.host	2013-05-18 00:16:34.000000000 -0400
@@ -245,6 +245,7 @@
 	;;
   sh | sh64)
 	machine_dir=sh
+	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED -DMALLOC_PROVIDED -DABORT_PROVIDED -DHAVE_FCNTL -ffunction-sections -fdata-sections"
 	;;
   sparc*)
 	machine_dir=sparc
diff -ruN newlib-2.0.0/newlib/libc/include/assert.h newlib-2.0.0-kos/newlib/libc/include/assert.h
--- newlib-2.0.0/newlib/libc/include/assert.h	2012-10-16 15:00:30.000000000 -0400
+++ newlib-2.0.0-kos/newlib/libc/include/assert.h	2013-05-18 00:17:28.000000000 -0400
@@ -13,8 +13,8 @@
 #ifdef NDEBUG           /* required by ANSI standard */
 # define assert(__e) ((void)0)
 #else
-# define assert(__e) ((__e) ? (void)0 : __assert_func (__FILE__, __LINE__, \
-						       __ASSERT_FUNC, #__e))
+# define assert(__e) ((__e) ? (void)0 : __assert (__FILE__, __LINE__, \
+						       #__e, (char *)0, __ASSERT_FUNC))
 
 # ifndef __ASSERT_FUNC
   /* Use g++'s demangled names in C++.  */
@@ -36,10 +36,8 @@
 # endif /* !__ASSERT_FUNC */
 #endif /* !NDEBUG */
 
-void _EXFUN(__assert, (const char *, int, const char *)
-	    _ATTRIBUTE ((__noreturn__)));
-void _EXFUN(__assert_func, (const char *, int, const char *, const char *)
-	    _ATTRIBUTE ((__noreturn__)));
+void _EXFUN(__assert, (const char *, int, const char *, const char *,
+                       const char *) _ATTRIBUTE ((__noreturn__)));
 
 #if __STDC_VERSION__ >= 201112L && !defined __cplusplus
 # define static_assert _Static_assert
diff -ruN newlib-2.0.0/newlib/libc/include/machine/_default_types.h newlib-2.0.0-kos/newlib/libc/include/machine/_default_types.h
--- newlib-2.0.0/newlib/libc/include/machine/_default_types.h	2012-10-16 14:45:23.000000000 -0400
+++ newlib-2.0.0-kos/newlib/libc/include/machine/_default_types.h	2013-05-18 01:00:45.000000000 -0400
@@ -9,6 +9,8 @@
 extern "C" {
 #endif
 
+#include <sys/features.h>
+
 /*
  * Guess on types by examining *_MIN / *_MAX defines.
  */
diff -ruN newlib-2.0.0/newlib/libc/include/sys/types.h newlib-2.0.0-kos/newlib/libc/include/sys/types.h
--- newlib-2.0.0/newlib/libc/include/sys/types.h	2012-07-06 06:41:21.000000000 -0400
+++ newlib-2.0.0-kos/newlib/libc/include/sys/types.h	2013-05-18 00:23:09.000000000 -0400
@@ -286,7 +286,7 @@
 
 #if defined(__XMK__)
 typedef unsigned int pthread_t;          /* identify a thread */
-#else
+#elif !defined(_arch_dreamcast)
 typedef __uint32_t pthread_t;            /* identify a thread */
 #endif
 
@@ -304,6 +304,7 @@
 #define PTHREAD_CREATE_DETACHED 0
 #define PTHREAD_CREATE_JOINABLE  1
 
+#if !defined(_arch_dreamcast)
 #if defined(__XMK__)
 typedef struct pthread_attr_s {
   int contentionscope;
@@ -337,6 +338,7 @@
 } pthread_attr_t;
 
 #endif /* !defined(__XMK__) */
+#endif /* !defined(_arch_dreamcast) */
 
 #if defined(_POSIX_THREAD_PROCESS_SHARED)
 /* NOTE: P1003.1c/D10, p. 81 defines following values for process_shared.  */
@@ -413,6 +415,7 @@
 } pthread_mutexattr_t;
 
 #else /* !defined(__XMK__) */
+#if !defined(_arch_dreamcast)
 typedef __uint32_t pthread_mutex_t;      /* identify a mutex */
 
 typedef struct {
@@ -429,10 +432,12 @@
 #endif
   int   recursive;
 } pthread_mutexattr_t;
+#endif /* !defined(_arch_dreamcast) */
 #endif /* !defined(__XMK__) */
 
 /* Condition Variables */
 
+#if !defined(_arch_dreamcast)
 typedef __uint32_t pthread_cond_t;       /* identify a condition variable */
 
 typedef struct {
@@ -441,15 +446,18 @@
   int   process_shared;       /* allow this to be shared amongst processes */
 #endif
 } pthread_condattr_t;         /* a condition attribute object */
+#endif /* !defined(_arch_dreamcast) */
 
 /* Keys */
 
+#if !defined(_arch_dreamcast)
 typedef __uint32_t pthread_key_t;        /* thread-specific data keys */
 
 typedef struct {
   int   is_initialized;  /* is this structure initialized? */
   int   init_executed;   /* has the initialization routine been run? */
 } pthread_once_t;       /* dynamic package initialization */
+#endif /* !defined(_arch_dreamcast) */
 #else
 #if defined (__CYGWIN__)
 #include <cygwin/types.h>
diff -ruN newlib-2.0.0/newlib/libc/stdlib/assert.c newlib-2.0.0-kos/newlib/libc/stdlib/assert.c
--- newlib-2.0.0/newlib/libc/stdlib/assert.c	2009-10-08 12:44:10.000000000 -0400
+++ newlib-2.0.0-kos/newlib/libc/stdlib/assert.c	2013-05-18 00:23:54.000000000 -0400
@@ -47,6 +47,8 @@
 #include <stdlib.h>
 #include <stdio.h>
 
+#if 0
+
 #ifndef HAVE_ASSERT_FUNC
 /* func can be NULL, in which case no function information is given.  */
 void
@@ -72,3 +74,7 @@
    __assert_func (file, line, NULL, failedexpr);
   /* NOTREACHED */
 }
+#endif
+// This is put in here to cause link errors if a proper newlib isn't present.
+int __newlib_kos_patch = 1;
+
